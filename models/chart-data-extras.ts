/* tslint:disable */
/* eslint-disable */
/**
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ChartDataFilter } from './chart-data-filter';
/**
 * 
 * @export
 * @interface ChartDataExtras
 */
export interface ChartDataExtras {
    /**
     * HAVING clause to be added to aggregate queries using AND operator.
     * @type {string}
     * @memberof ChartDataExtras
     */
    having?: string;
    /**
     * HAVING filters to be added to legacy Druid datasource queries. This field is deprecated
     * @type {Array<ChartDataFilter>}
     * @memberof ChartDataExtras
     */
    havingDruid?: Array<ChartDataFilter>;
    /**
     * End time for relative time deltas. Default: `config[\"DEFAULT_RELATIVE_START_TIME\"]`
     * @type {string}
     * @memberof ChartDataExtras
     */
    relativeEnd?: ChartDataExtrasRelativeEndEnum;
    /**
     * Start time for relative time deltas. Default: `config[\"DEFAULT_RELATIVE_START_TIME\"]`
     * @type {string}
     * @memberof ChartDataExtras
     */
    relativeStart?: ChartDataExtrasRelativeStartEnum;
    /**
     * To what level of granularity should the temporal column be aggregated. Supports [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Durations) durations.
     * @type {string}
     * @memberof ChartDataExtras
     */
    timeGrainSqla?: ChartDataExtrasTimeGrainSqlaEnum;
    /**
     * WHERE clause to be added to queries using AND operator.
     * @type {string}
     * @memberof ChartDataExtras
     */
    where?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ChartDataExtrasRelativeEndEnum {
    Today = 'today',
    Now = 'now'
}
/**
    * @export
    * @enum {string}
    */
export enum ChartDataExtrasRelativeStartEnum {
    Today = 'today',
    Now = 'now'
}
/**
    * @export
    * @enum {string}
    */
export enum ChartDataExtrasTimeGrainSqlaEnum {
    PT1S = 'PT1S',
    PT5S = 'PT5S',
    PT30S = 'PT30S',
    PT1M = 'PT1M',
    PT5M = 'PT5M',
    PT10M = 'PT10M',
    PT15M = 'PT15M',
    PT30M = 'PT30M',
    PT1H = 'PT1H',
    PT6H = 'PT6H',
    P1D = 'P1D',
    P1W = 'P1W',
    P1M = 'P1M',
    P3M = 'P3M',
    P1Y = 'P1Y',
    _19691228T000000ZP1W = '1969-12-28T00:00:00Z/P1W',
    _19691229T000000ZP1W = '1969-12-29T00:00:00Z/P1W',
    P1W19700103T000000Z = 'P1W/1970-01-03T00:00:00Z',
    P1W19700104T000000Z = 'P1W/1970-01-04T00:00:00Z'
}

