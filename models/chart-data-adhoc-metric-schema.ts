/* tslint:disable */
/* eslint-disable */
/**
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ChartDataColumn } from './chart-data-column';
/**
 * 
 * @export
 * @interface ChartDataAdhocMetricSchema
 */
export interface ChartDataAdhocMetricSchema {
    /**
     * Aggregation operator. Only required for simple expression types.
     * @type {string}
     * @memberof ChartDataAdhocMetricSchema
     */
    aggregate?: ChartDataAdhocMetricSchemaAggregateEnum;
    /**
     * 
     * @type {ChartDataColumn}
     * @memberof ChartDataAdhocMetricSchema
     */
    column?: ChartDataColumn;
    /**
     * Simple or SQL metric
     * @type {string}
     * @memberof ChartDataAdhocMetricSchema
     */
    expressionType: ChartDataAdhocMetricSchemaExpressionTypeEnum;
    /**
     * When false, the label will be automatically generated based on the aggregate expression. When true, a custom label has to be specified.
     * @type {boolean}
     * @memberof ChartDataAdhocMetricSchema
     */
    hasCustomLabel?: boolean;
    /**
     * Indicates if the filter has been added by a filter component as opposed to being a part of the original query.
     * @type {boolean}
     * @memberof ChartDataAdhocMetricSchema
     */
    isExtra?: boolean;
    /**
     * Label for the metric. Is automatically generated unless hasCustomLabel is true, in which case label must be defined.
     * @type {string}
     * @memberof ChartDataAdhocMetricSchema
     */
    label?: string;
    /**
     * Unique identifier. Can be any string value, as long as all metrics have a unique identifier. If undefined, a random name will be generated.
     * @type {string}
     * @memberof ChartDataAdhocMetricSchema
     */
    optionName?: string;
    /**
     * The metric as defined by a SQL aggregate expression. Only required for SQL expression type.
     * @type {string}
     * @memberof ChartDataAdhocMetricSchema
     */
    sqlExpression?: string;
    /**
     * Optional time grain for temporal filters
     * @type {string}
     * @memberof ChartDataAdhocMetricSchema
     */
    timeGrain?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ChartDataAdhocMetricSchemaAggregateEnum {
    AVG = 'AVG',
    COUNT = 'COUNT',
    COUNTDISTINCT = 'COUNT_DISTINCT',
    MAX = 'MAX',
    MIN = 'MIN',
    SUM = 'SUM'
}
/**
    * @export
    * @enum {string}
    */
export enum ChartDataAdhocMetricSchemaExpressionTypeEnum {
    SIMPLE = 'SIMPLE',
    SQL = 'SQL'
}

