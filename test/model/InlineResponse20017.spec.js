/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse20017', function() {
      beforeEach(function() {
        instance = new Superset.InlineResponse20017();
      });

      it('should create an instance of InlineResponse20017', function() {
        // TODO: update the code to test InlineResponse20017
        expect(instance).to.be.a(Superset.InlineResponse20017);
      });

      it('should have the property count (base name: "count")', function() {
        // TODO: update the code to test the property count
        expect(instance).to.have.property('count');
        // expect(instance.count).to.be(expectedValueLiteral);
      });

      it('should have the property descriptionColumns (base name: "description_columns")', function() {
        // TODO: update the code to test the property descriptionColumns
        expect(instance).to.have.property('descriptionColumns');
        // expect(instance.descriptionColumns).to.be(expectedValueLiteral);
      });

      it('should have the property ids (base name: "ids")', function() {
        // TODO: update the code to test the property ids
        expect(instance).to.have.property('ids');
        // expect(instance.ids).to.be(expectedValueLiteral);
      });

      it('should have the property labelColumns (base name: "label_columns")', function() {
        // TODO: update the code to test the property labelColumns
        expect(instance).to.have.property('labelColumns');
        // expect(instance.labelColumns).to.be(expectedValueLiteral);
      });

      it('should have the property listColumns (base name: "list_columns")', function() {
        // TODO: update the code to test the property listColumns
        expect(instance).to.have.property('listColumns');
        // expect(instance.listColumns).to.be(expectedValueLiteral);
      });

      it('should have the property listTitle (base name: "list_title")', function() {
        // TODO: update the code to test the property listTitle
        expect(instance).to.have.property('listTitle');
        // expect(instance.listTitle).to.be(expectedValueLiteral);
      });

      it('should have the property orderColumns (base name: "order_columns")', function() {
        // TODO: update the code to test the property orderColumns
        expect(instance).to.have.property('orderColumns');
        // expect(instance.orderColumns).to.be(expectedValueLiteral);
      });

      it('should have the property result (base name: "result")', function() {
        // TODO: update the code to test the property result
        expect(instance).to.have.property('result');
        // expect(instance.result).to.be(expectedValueLiteral);
      });

    });
  });

}));
