/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DashboardCopySchema', function() {
      beforeEach(function() {
        instance = new Superset.DashboardCopySchema();
      });

      it('should create an instance of DashboardCopySchema', function() {
        // TODO: update the code to test DashboardCopySchema
        expect(instance).to.be.a(Superset.DashboardCopySchema);
      });

      it('should have the property css (base name: "css")', function() {
        // TODO: update the code to test the property css
        expect(instance).to.have.property('css');
        // expect(instance.css).to.be(expectedValueLiteral);
      });

      it('should have the property dashboardTitle (base name: "dashboard_title")', function() {
        // TODO: update the code to test the property dashboardTitle
        expect(instance).to.have.property('dashboardTitle');
        // expect(instance.dashboardTitle).to.be(expectedValueLiteral);
      });

      it('should have the property duplicateSlices (base name: "duplicate_slices")', function() {
        // TODO: update the code to test the property duplicateSlices
        expect(instance).to.have.property('duplicateSlices');
        // expect(instance.duplicateSlices).to.be(expectedValueLiteral);
      });

      it('should have the property jsonMetadata (base name: "json_metadata")', function() {
        // TODO: update the code to test the property jsonMetadata
        expect(instance).to.have.property('jsonMetadata');
        // expect(instance.jsonMetadata).to.be(expectedValueLiteral);
      });

    });
  });

}));
