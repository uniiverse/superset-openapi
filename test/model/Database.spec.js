/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Database', function() {
      beforeEach(function() {
        instance = new Superset.Database();
      });

      it('should create an instance of Database', function() {
        // TODO: update the code to test Database
        expect(instance).to.be.a(Superset.Database);
      });

      it('should have the property allowsCostEstimate (base name: "allows_cost_estimate")', function() {
        // TODO: update the code to test the property allowsCostEstimate
        expect(instance).to.have.property('allowsCostEstimate');
        // expect(instance.allowsCostEstimate).to.be(expectedValueLiteral);
      });

      it('should have the property allowsSubquery (base name: "allows_subquery")', function() {
        // TODO: update the code to test the property allowsSubquery
        expect(instance).to.have.property('allowsSubquery');
        // expect(instance.allowsSubquery).to.be(expectedValueLiteral);
      });

      it('should have the property allowsVirtualTableExplore (base name: "allows_virtual_table_explore")', function() {
        // TODO: update the code to test the property allowsVirtualTableExplore
        expect(instance).to.have.property('allowsVirtualTableExplore');
        // expect(instance.allowsVirtualTableExplore).to.be(expectedValueLiteral);
      });

      it('should have the property backend (base name: "backend")', function() {
        // TODO: update the code to test the property backend
        expect(instance).to.have.property('backend');
        // expect(instance.backend).to.be(expectedValueLiteral);
      });

      it('should have the property disableDataPreview (base name: "disable_data_preview")', function() {
        // TODO: update the code to test the property disableDataPreview
        expect(instance).to.have.property('disableDataPreview');
        // expect(instance.disableDataPreview).to.be(expectedValueLiteral);
      });

      it('should have the property exploreDatabaseId (base name: "explore_database_id")', function() {
        // TODO: update the code to test the property exploreDatabaseId
        expect(instance).to.have.property('exploreDatabaseId');
        // expect(instance.exploreDatabaseId).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

    });
  });

}));
