/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ChartDataRollingOptionsSchema', function() {
      beforeEach(function() {
        instance = new Superset.ChartDataRollingOptionsSchema();
      });

      it('should create an instance of ChartDataRollingOptionsSchema', function() {
        // TODO: update the code to test ChartDataRollingOptionsSchema
        expect(instance).to.be.a(Superset.ChartDataRollingOptionsSchema);
      });

      it('should have the property center (base name: "center")', function() {
        // TODO: update the code to test the property center
        expect(instance).to.have.property('center');
        // expect(instance.center).to.be(expectedValueLiteral);
      });

      it('should have the property minPeriods (base name: "min_periods")', function() {
        // TODO: update the code to test the property minPeriods
        expect(instance).to.have.property('minPeriods');
        // expect(instance.minPeriods).to.be(expectedValueLiteral);
      });

      it('should have the property rollingType (base name: "rolling_type")', function() {
        // TODO: update the code to test the property rollingType
        expect(instance).to.have.property('rollingType');
        // expect(instance.rollingType).to.be(expectedValueLiteral);
      });

      it('should have the property rollingTypeOptions (base name: "rolling_type_options")', function() {
        // TODO: update the code to test the property rollingTypeOptions
        expect(instance).to.have.property('rollingTypeOptions');
        // expect(instance.rollingTypeOptions).to.be(expectedValueLiteral);
      });

      it('should have the property winType (base name: "win_type")', function() {
        // TODO: update the code to test the property winType
        expect(instance).to.have.property('winType');
        // expect(instance.winType).to.be(expectedValueLiteral);
      });

      it('should have the property window (base name: "window")', function() {
        // TODO: update the code to test the property window
        expect(instance).to.have.property('window');
        // expect(instance.window).to.be(expectedValueLiteral);
      });

    });
  });

}));
