/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ChartDataFilter', function() {
      beforeEach(function() {
        instance = new Superset.ChartDataFilter();
      });

      it('should create an instance of ChartDataFilter', function() {
        // TODO: update the code to test ChartDataFilter
        expect(instance).to.be.a(Superset.ChartDataFilter);
      });

      it('should have the property col (base name: "col")', function() {
        // TODO: update the code to test the property col
        expect(instance).to.have.property('col');
        // expect(instance.col).to.be(expectedValueLiteral);
      });

      it('should have the property grain (base name: "grain")', function() {
        // TODO: update the code to test the property grain
        expect(instance).to.have.property('grain');
        // expect(instance.grain).to.be(expectedValueLiteral);
      });

      it('should have the property isExtra (base name: "isExtra")', function() {
        // TODO: update the code to test the property isExtra
        expect(instance).to.have.property('isExtra');
        // expect(instance.isExtra).to.be(expectedValueLiteral);
      });

      it('should have the property op (base name: "op")', function() {
        // TODO: update the code to test the property op
        expect(instance).to.have.property('op');
        // expect(instance.op).to.be(expectedValueLiteral);
      });

      it('should have the property val (base name: "val")', function() {
        // TODO: update the code to test the property val
        expect(instance).to.have.property('val');
        // expect(instance.val).to.be(expectedValueLiteral);
      });

    });
  });

}));
