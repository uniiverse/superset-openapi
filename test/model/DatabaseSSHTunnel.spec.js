/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DatabaseSSHTunnel', function() {
      beforeEach(function() {
        instance = new Superset.DatabaseSSHTunnel();
      });

      it('should create an instance of DatabaseSSHTunnel', function() {
        // TODO: update the code to test DatabaseSSHTunnel
        expect(instance).to.be.a(Superset.DatabaseSSHTunnel);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property password (base name: "password")', function() {
        // TODO: update the code to test the property password
        expect(instance).to.have.property('password');
        // expect(instance.password).to.be(expectedValueLiteral);
      });

      it('should have the property privateKey (base name: "private_key")', function() {
        // TODO: update the code to test the property privateKey
        expect(instance).to.have.property('privateKey');
        // expect(instance.privateKey).to.be(expectedValueLiteral);
      });

      it('should have the property privateKeyPassword (base name: "private_key_password")', function() {
        // TODO: update the code to test the property privateKeyPassword
        expect(instance).to.have.property('privateKeyPassword');
        // expect(instance.privateKeyPassword).to.be(expectedValueLiteral);
      });

      it('should have the property serverAddress (base name: "server_address")', function() {
        // TODO: update the code to test the property serverAddress
        expect(instance).to.have.property('serverAddress');
        // expect(instance.serverAddress).to.be(expectedValueLiteral);
      });

      it('should have the property serverPort (base name: "server_port")', function() {
        // TODO: update the code to test the property serverPort
        expect(instance).to.have.property('serverPort');
        // expect(instance.serverPort).to.be(expectedValueLiteral);
      });

      it('should have the property username (base name: "username")', function() {
        // TODO: update the code to test the property username
        expect(instance).to.have.property('username');
        // expect(instance.username).to.be(expectedValueLiteral);
      });

    });
  });

}));
