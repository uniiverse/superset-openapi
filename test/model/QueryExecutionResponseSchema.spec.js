/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('QueryExecutionResponseSchema', function() {
      beforeEach(function() {
        instance = new Superset.QueryExecutionResponseSchema();
      });

      it('should create an instance of QueryExecutionResponseSchema', function() {
        // TODO: update the code to test QueryExecutionResponseSchema
        expect(instance).to.be.a(Superset.QueryExecutionResponseSchema);
      });

      it('should have the property columns (base name: "columns")', function() {
        // TODO: update the code to test the property columns
        expect(instance).to.have.property('columns');
        // expect(instance.columns).to.be(expectedValueLiteral);
      });

      it('should have the property data (base name: "data")', function() {
        // TODO: update the code to test the property data
        expect(instance).to.have.property('data');
        // expect(instance.data).to.be(expectedValueLiteral);
      });

      it('should have the property expandedColumns (base name: "expanded_columns")', function() {
        // TODO: update the code to test the property expandedColumns
        expect(instance).to.have.property('expandedColumns');
        // expect(instance.expandedColumns).to.be(expectedValueLiteral);
      });

      it('should have the property query (base name: "query")', function() {
        // TODO: update the code to test the property query
        expect(instance).to.have.property('query');
        // expect(instance.query).to.be(expectedValueLiteral);
      });

      it('should have the property queryId (base name: "query_id")', function() {
        // TODO: update the code to test the property queryId
        expect(instance).to.have.property('queryId');
        // expect(instance.queryId).to.be(expectedValueLiteral);
      });

      it('should have the property selectedColumns (base name: "selected_columns")', function() {
        // TODO: update the code to test the property selectedColumns
        expect(instance).to.have.property('selectedColumns');
        // expect(instance.selectedColumns).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

    });
  });

}));
