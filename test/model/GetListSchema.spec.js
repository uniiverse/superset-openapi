/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetListSchema', function() {
      beforeEach(function() {
        instance = new Superset.GetListSchema();
      });

      it('should create an instance of GetListSchema', function() {
        // TODO: update the code to test GetListSchema
        expect(instance).to.be.a(Superset.GetListSchema);
      });

      it('should have the property columns (base name: "columns")', function() {
        // TODO: update the code to test the property columns
        expect(instance).to.have.property('columns');
        // expect(instance.columns).to.be(expectedValueLiteral);
      });

      it('should have the property filters (base name: "filters")', function() {
        // TODO: update the code to test the property filters
        expect(instance).to.have.property('filters');
        // expect(instance.filters).to.be(expectedValueLiteral);
      });

      it('should have the property keys (base name: "keys")', function() {
        // TODO: update the code to test the property keys
        expect(instance).to.have.property('keys');
        // expect(instance.keys).to.be(expectedValueLiteral);
      });

      it('should have the property orderColumn (base name: "order_column")', function() {
        // TODO: update the code to test the property orderColumn
        expect(instance).to.have.property('orderColumn');
        // expect(instance.orderColumn).to.be(expectedValueLiteral);
      });

      it('should have the property orderDirection (base name: "order_direction")', function() {
        // TODO: update the code to test the property orderDirection
        expect(instance).to.have.property('orderDirection');
        // expect(instance.orderDirection).to.be(expectedValueLiteral);
      });

      it('should have the property page (base name: "page")', function() {
        // TODO: update the code to test the property page
        expect(instance).to.have.property('page');
        // expect(instance.page).to.be(expectedValueLiteral);
      });

      it('should have the property pageSize (base name: "page_size")', function() {
        // TODO: update the code to test the property pageSize
        expect(instance).to.have.property('pageSize');
        // expect(instance.pageSize).to.be(expectedValueLiteral);
      });

    });
  });

}));
