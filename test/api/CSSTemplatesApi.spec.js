/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Superset.CSSTemplatesApi();
  });

  describe('(package)', function() {
    describe('CSSTemplatesApi', function() {
      describe('apiV1CssTemplateDelete', function() {
        it('should call apiV1CssTemplateDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1CssTemplateDelete call and complete the assertions
          /*
          var opts = {};

          instance.apiV1CssTemplateDelete(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse400);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1CssTemplateGet', function() {
        it('should call apiV1CssTemplateGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1CssTemplateGet call and complete the assertions
          /*
          var opts = {};

          instance.apiV1CssTemplateGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse20014);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1CssTemplateInfoGet', function() {
        it('should call apiV1CssTemplateInfoGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1CssTemplateInfoGet call and complete the assertions
          /*
          var opts = {};

          instance.apiV1CssTemplateInfoGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse2002);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1CssTemplatePkDelete', function() {
        it('should call apiV1CssTemplatePkDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1CssTemplatePkDelete call and complete the assertions
          /*

          instance.apiV1CssTemplatePkDelete(pk, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse400);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1CssTemplatePkGet', function() {
        it('should call apiV1CssTemplatePkGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1CssTemplatePkGet call and complete the assertions
          /*
          var opts = {};

          instance.apiV1CssTemplatePkGet(pk, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse20015);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1CssTemplatePkPut', function() {
        it('should call apiV1CssTemplatePkPut successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1CssTemplatePkPut call and complete the assertions
          /*

          instance.apiV1CssTemplatePkPut(body, pk, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse20016);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1CssTemplatePost', function() {
        it('should call apiV1CssTemplatePost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1CssTemplatePost call and complete the assertions
          /*

          instance.apiV1CssTemplatePost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1CssTemplateRelatedColumnNameGet', function() {
        it('should call apiV1CssTemplateRelatedColumnNameGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1CssTemplateRelatedColumnNameGet call and complete the assertions
          /*
          var opts = {};

          instance.apiV1CssTemplateRelatedColumnNameGet(columnName, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.RelatedResponseSchema);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
