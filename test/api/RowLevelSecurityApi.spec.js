/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Superset.RowLevelSecurityApi();
  });

  describe('(package)', function() {
    describe('RowLevelSecurityApi', function() {
      describe('apiV1RowlevelsecurityDelete', function() {
        it('should call apiV1RowlevelsecurityDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1RowlevelsecurityDelete call and complete the assertions
          /*
          var opts = {};

          instance.apiV1RowlevelsecurityDelete(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse400);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1RowlevelsecurityGet', function() {
        it('should call apiV1RowlevelsecurityGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1RowlevelsecurityGet call and complete the assertions
          /*
          var opts = {};

          instance.apiV1RowlevelsecurityGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse20053);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1RowlevelsecurityInfoGet', function() {
        it('should call apiV1RowlevelsecurityInfoGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1RowlevelsecurityInfoGet call and complete the assertions
          /*
          var opts = {};

          instance.apiV1RowlevelsecurityInfoGet(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse2002);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1RowlevelsecurityPkDelete', function() {
        it('should call apiV1RowlevelsecurityPkDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1RowlevelsecurityPkDelete call and complete the assertions
          /*

          instance.apiV1RowlevelsecurityPkDelete(pk, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse400);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1RowlevelsecurityPkGet', function() {
        it('should call apiV1RowlevelsecurityPkGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1RowlevelsecurityPkGet call and complete the assertions
          /*
          var opts = {};

          instance.apiV1RowlevelsecurityPkGet(pk, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse20054);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1RowlevelsecurityPkPut', function() {
        it('should call apiV1RowlevelsecurityPkPut successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1RowlevelsecurityPkPut call and complete the assertions
          /*

          instance.apiV1RowlevelsecurityPkPut(body, pk, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse20055);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1RowlevelsecurityPost', function() {
        it('should call apiV1RowlevelsecurityPost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1RowlevelsecurityPost call and complete the assertions
          /*

          instance.apiV1RowlevelsecurityPost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.InlineResponse20114);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiV1RowlevelsecurityRelatedColumnNameGet', function() {
        it('should call apiV1RowlevelsecurityRelatedColumnNameGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiV1RowlevelsecurityRelatedColumnNameGet call and complete the assertions
          /*
          var opts = {};

          instance.apiV1RowlevelsecurityRelatedColumnNameGet(columnName, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Superset.RelatedResponseSchema);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
