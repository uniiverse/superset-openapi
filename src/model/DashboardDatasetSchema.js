/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Database} from './Database';

/**
 * The DashboardDatasetSchema model module.
 * @module model/DashboardDatasetSchema
 * @version v1
 */
export class DashboardDatasetSchema {
  /**
   * Constructs a new <code>DashboardDatasetSchema</code>.
   * @alias module:model/DashboardDatasetSchema
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DashboardDatasetSchema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DashboardDatasetSchema} obj Optional instance to populate.
   * @return {module:model/DashboardDatasetSchema} The populated <code>DashboardDatasetSchema</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DashboardDatasetSchema();
      if (data.hasOwnProperty('cache_timeout'))
        obj.cacheTimeout = ApiClient.convertToType(data['cache_timeout'], 'Number');
      if (data.hasOwnProperty('column_formats'))
        obj.columnFormats = ApiClient.convertToType(data['column_formats'], Object);
      if (data.hasOwnProperty('column_types'))
        obj.columnTypes = ApiClient.convertToType(data['column_types'], ['Number']);
      if (data.hasOwnProperty('columns'))
        obj.columns = ApiClient.convertToType(data['columns'], [Object]);
      if (data.hasOwnProperty('database'))
        obj.database = Database.constructFromObject(data['database']);
      if (data.hasOwnProperty('datasource_name'))
        obj.datasourceName = ApiClient.convertToType(data['datasource_name'], 'String');
      if (data.hasOwnProperty('default_endpoint'))
        obj.defaultEndpoint = ApiClient.convertToType(data['default_endpoint'], 'String');
      if (data.hasOwnProperty('edit_url'))
        obj.editUrl = ApiClient.convertToType(data['edit_url'], 'String');
      if (data.hasOwnProperty('fetch_values_predicate'))
        obj.fetchValuesPredicate = ApiClient.convertToType(data['fetch_values_predicate'], 'String');
      if (data.hasOwnProperty('filter_select'))
        obj.filterSelect = ApiClient.convertToType(data['filter_select'], 'Boolean');
      if (data.hasOwnProperty('filter_select_enabled'))
        obj.filterSelectEnabled = ApiClient.convertToType(data['filter_select_enabled'], 'Boolean');
      if (data.hasOwnProperty('granularity_sqla'))
        obj.granularitySqla = ApiClient.convertToType(data['granularity_sqla'], [['String']]);
      if (data.hasOwnProperty('health_check_message'))
        obj.healthCheckMessage = ApiClient.convertToType(data['health_check_message'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('is_sqllab_view'))
        obj.isSqllabView = ApiClient.convertToType(data['is_sqllab_view'], 'Boolean');
      if (data.hasOwnProperty('main_dttm_col'))
        obj.mainDttmCol = ApiClient.convertToType(data['main_dttm_col'], 'String');
      if (data.hasOwnProperty('metrics'))
        obj.metrics = ApiClient.convertToType(data['metrics'], [Object]);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('offset'))
        obj.offset = ApiClient.convertToType(data['offset'], 'Number');
      if (data.hasOwnProperty('order_by_choices'))
        obj.orderByChoices = ApiClient.convertToType(data['order_by_choices'], [['String']]);
      if (data.hasOwnProperty('owners'))
        obj.owners = ApiClient.convertToType(data['owners'], [Object]);
      if (data.hasOwnProperty('params'))
        obj.params = ApiClient.convertToType(data['params'], 'String');
      if (data.hasOwnProperty('perm'))
        obj.perm = ApiClient.convertToType(data['perm'], 'String');
      if (data.hasOwnProperty('schema'))
        obj.schema = ApiClient.convertToType(data['schema'], 'String');
      if (data.hasOwnProperty('select_star'))
        obj.selectStar = ApiClient.convertToType(data['select_star'], 'String');
      if (data.hasOwnProperty('sql'))
        obj.sql = ApiClient.convertToType(data['sql'], 'String');
      if (data.hasOwnProperty('table_name'))
        obj.tableName = ApiClient.convertToType(data['table_name'], 'String');
      if (data.hasOwnProperty('template_params'))
        obj.templateParams = ApiClient.convertToType(data['template_params'], 'String');
      if (data.hasOwnProperty('time_grain_sqla'))
        obj.timeGrainSqla = ApiClient.convertToType(data['time_grain_sqla'], [['String']]);
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('uid'))
        obj.uid = ApiClient.convertToType(data['uid'], 'String');
      if (data.hasOwnProperty('verbose_map'))
        obj.verboseMap = ApiClient.convertToType(data['verbose_map'], {'String': 'String'});
    }
    return obj;
  }
}

/**
 * @member {Number} cacheTimeout
 */
DashboardDatasetSchema.prototype.cacheTimeout = undefined;

/**
 * @member {Object} columnFormats
 */
DashboardDatasetSchema.prototype.columnFormats = undefined;

/**
 * @member {Array.<Number>} columnTypes
 */
DashboardDatasetSchema.prototype.columnTypes = undefined;

/**
 * @member {Array.<Object>} columns
 */
DashboardDatasetSchema.prototype.columns = undefined;

/**
 * @member {module:model/Database} database
 */
DashboardDatasetSchema.prototype.database = undefined;

/**
 * @member {String} datasourceName
 */
DashboardDatasetSchema.prototype.datasourceName = undefined;

/**
 * @member {String} defaultEndpoint
 */
DashboardDatasetSchema.prototype.defaultEndpoint = undefined;

/**
 * @member {String} editUrl
 */
DashboardDatasetSchema.prototype.editUrl = undefined;

/**
 * @member {String} fetchValuesPredicate
 */
DashboardDatasetSchema.prototype.fetchValuesPredicate = undefined;

/**
 * @member {Boolean} filterSelect
 */
DashboardDatasetSchema.prototype.filterSelect = undefined;

/**
 * @member {Boolean} filterSelectEnabled
 */
DashboardDatasetSchema.prototype.filterSelectEnabled = undefined;

/**
 * @member {Array.<Array.<String>>} granularitySqla
 */
DashboardDatasetSchema.prototype.granularitySqla = undefined;

/**
 * @member {String} healthCheckMessage
 */
DashboardDatasetSchema.prototype.healthCheckMessage = undefined;

/**
 * @member {Number} id
 */
DashboardDatasetSchema.prototype.id = undefined;

/**
 * @member {Boolean} isSqllabView
 */
DashboardDatasetSchema.prototype.isSqllabView = undefined;

/**
 * @member {String} mainDttmCol
 */
DashboardDatasetSchema.prototype.mainDttmCol = undefined;

/**
 * @member {Array.<Object>} metrics
 */
DashboardDatasetSchema.prototype.metrics = undefined;

/**
 * @member {String} name
 */
DashboardDatasetSchema.prototype.name = undefined;

/**
 * @member {Number} offset
 */
DashboardDatasetSchema.prototype.offset = undefined;

/**
 * @member {Array.<Array.<String>>} orderByChoices
 */
DashboardDatasetSchema.prototype.orderByChoices = undefined;

/**
 * @member {Array.<Object>} owners
 */
DashboardDatasetSchema.prototype.owners = undefined;

/**
 * @member {String} params
 */
DashboardDatasetSchema.prototype.params = undefined;

/**
 * @member {String} perm
 */
DashboardDatasetSchema.prototype.perm = undefined;

/**
 * @member {String} schema
 */
DashboardDatasetSchema.prototype.schema = undefined;

/**
 * @member {String} selectStar
 */
DashboardDatasetSchema.prototype.selectStar = undefined;

/**
 * @member {String} sql
 */
DashboardDatasetSchema.prototype.sql = undefined;

/**
 * @member {String} tableName
 */
DashboardDatasetSchema.prototype.tableName = undefined;

/**
 * @member {String} templateParams
 */
DashboardDatasetSchema.prototype.templateParams = undefined;

/**
 * @member {Array.<Array.<String>>} timeGrainSqla
 */
DashboardDatasetSchema.prototype.timeGrainSqla = undefined;

/**
 * @member {String} type
 */
DashboardDatasetSchema.prototype.type = undefined;

/**
 * @member {String} uid
 */
DashboardDatasetSchema.prototype.uid = undefined;

/**
 * @member {Object.<String, String>} verboseMap
 */
DashboardDatasetSchema.prototype.verboseMap = undefined;

