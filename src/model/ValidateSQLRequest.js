/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The ValidateSQLRequest model module.
 * @module model/ValidateSQLRequest
 * @version v1
 */
export class ValidateSQLRequest {
  /**
   * Constructs a new <code>ValidateSQLRequest</code>.
   * @alias module:model/ValidateSQLRequest
   * @class
   * @param sql {String} SQL statement to validate
   */
  constructor(sql) {
    this.sql = sql;
  }

  /**
   * Constructs a <code>ValidateSQLRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ValidateSQLRequest} obj Optional instance to populate.
   * @return {module:model/ValidateSQLRequest} The populated <code>ValidateSQLRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ValidateSQLRequest();
      if (data.hasOwnProperty('schema'))
        obj.schema = ApiClient.convertToType(data['schema'], 'String');
      if (data.hasOwnProperty('sql'))
        obj.sql = ApiClient.convertToType(data['sql'], 'String');
      if (data.hasOwnProperty('template_params'))
        obj.templateParams = ApiClient.convertToType(data['template_params'], Object);
    }
    return obj;
  }
}

/**
 * @member {String} schema
 */
ValidateSQLRequest.prototype.schema = undefined;

/**
 * SQL statement to validate
 * @member {String} sql
 */
ValidateSQLRequest.prototype.sql = undefined;

/**
 * @member {Object} templateParams
 */
ValidateSQLRequest.prototype.templateParams = undefined;

