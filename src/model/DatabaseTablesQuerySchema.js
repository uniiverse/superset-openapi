/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The DatabaseTablesQuerySchema model module.
 * @module model/DatabaseTablesQuerySchema
 * @version v1
 */
export class DatabaseTablesQuerySchema {
  /**
   * Constructs a new <code>DatabaseTablesQuerySchema</code>.
   * @alias module:model/DatabaseTablesQuerySchema
   * @class
   * @param schemaName {String} 
   */
  constructor(schemaName) {
    this.schemaName = schemaName;
  }

  /**
   * Constructs a <code>DatabaseTablesQuerySchema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DatabaseTablesQuerySchema} obj Optional instance to populate.
   * @return {module:model/DatabaseTablesQuerySchema} The populated <code>DatabaseTablesQuerySchema</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DatabaseTablesQuerySchema();
      if (data.hasOwnProperty('force'))
        obj.force = ApiClient.convertToType(data['force'], 'Boolean');
      if (data.hasOwnProperty('schema_name'))
        obj.schemaName = ApiClient.convertToType(data['schema_name'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Boolean} force
 */
DatabaseTablesQuerySchema.prototype.force = undefined;

/**
 * @member {String} schemaName
 */
DatabaseTablesQuerySchema.prototype.schemaName = undefined;

