/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The InlineResponse410Errors model module.
 * @module model/InlineResponse410Errors
 * @version v1
 */
export class InlineResponse410Errors {
  /**
   * Constructs a new <code>InlineResponse410Errors</code>.
   * @alias module:model/InlineResponse410Errors
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse410Errors</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse410Errors} obj Optional instance to populate.
   * @return {module:model/InlineResponse410Errors} The populated <code>InlineResponse410Errors</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse410Errors();
      if (data.hasOwnProperty('error_type'))
        obj.errorType = ApiClient.convertToType(data['error_type'], 'String');
      if (data.hasOwnProperty('extra'))
        obj.extra = ApiClient.convertToType(data['extra'], Object);
      if (data.hasOwnProperty('level'))
        obj.level = ApiClient.convertToType(data['level'], 'String');
      if (data.hasOwnProperty('message'))
        obj.message = ApiClient.convertToType(data['message'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>errorType</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse410Errors.ErrorTypeEnum = {
  /**
   * value: "FRONTEND_CSRF_ERROR"
   * @const
   */
  FRONTEND_CSRF_ERROR: "FRONTEND_CSRF_ERROR",

  /**
   * value: "FRONTEND_NETWORK_ERROR"
   * @const
   */
  FRONTEND_NETWORK_ERROR: "FRONTEND_NETWORK_ERROR",

  /**
   * value: "FRONTEND_TIMEOUT_ERROR"
   * @const
   */
  FRONTEND_TIMEOUT_ERROR: "FRONTEND_TIMEOUT_ERROR",

  /**
   * value: "GENERIC_DB_ENGINE_ERROR"
   * @const
   */
  GENERIC_DB_ENGINE_ERROR: "GENERIC_DB_ENGINE_ERROR",

  /**
   * value: "COLUMN_DOES_NOT_EXIST_ERROR"
   * @const
   */
  COLUMN_DOES_NOT_EXIST_ERROR: "COLUMN_DOES_NOT_EXIST_ERROR",

  /**
   * value: "TABLE_DOES_NOT_EXIST_ERROR"
   * @const
   */
  TABLE_DOES_NOT_EXIST_ERROR: "TABLE_DOES_NOT_EXIST_ERROR",

  /**
   * value: "SCHEMA_DOES_NOT_EXIST_ERROR"
   * @const
   */
  SCHEMA_DOES_NOT_EXIST_ERROR: "SCHEMA_DOES_NOT_EXIST_ERROR",

  /**
   * value: "CONNECTION_INVALID_USERNAME_ERROR"
   * @const
   */
  CONNECTION_INVALID_USERNAME_ERROR: "CONNECTION_INVALID_USERNAME_ERROR",

  /**
   * value: "CONNECTION_INVALID_PASSWORD_ERROR"
   * @const
   */
  CONNECTION_INVALID_PASSWORD_ERROR: "CONNECTION_INVALID_PASSWORD_ERROR",

  /**
   * value: "CONNECTION_INVALID_HOSTNAME_ERROR"
   * @const
   */
  CONNECTION_INVALID_HOSTNAME_ERROR: "CONNECTION_INVALID_HOSTNAME_ERROR",

  /**
   * value: "CONNECTION_PORT_CLOSED_ERROR"
   * @const
   */
  CONNECTION_PORT_CLOSED_ERROR: "CONNECTION_PORT_CLOSED_ERROR",

  /**
   * value: "CONNECTION_INVALID_PORT_ERROR"
   * @const
   */
  CONNECTION_INVALID_PORT_ERROR: "CONNECTION_INVALID_PORT_ERROR",

  /**
   * value: "CONNECTION_HOST_DOWN_ERROR"
   * @const
   */
  CONNECTION_HOST_DOWN_ERROR: "CONNECTION_HOST_DOWN_ERROR",

  /**
   * value: "CONNECTION_ACCESS_DENIED_ERROR"
   * @const
   */
  CONNECTION_ACCESS_DENIED_ERROR: "CONNECTION_ACCESS_DENIED_ERROR",

  /**
   * value: "CONNECTION_UNKNOWN_DATABASE_ERROR"
   * @const
   */
  CONNECTION_UNKNOWN_DATABASE_ERROR: "CONNECTION_UNKNOWN_DATABASE_ERROR",

  /**
   * value: "CONNECTION_DATABASE_PERMISSIONS_ERROR"
   * @const
   */
  CONNECTION_DATABASE_PERMISSIONS_ERROR: "CONNECTION_DATABASE_PERMISSIONS_ERROR",

  /**
   * value: "CONNECTION_MISSING_PARAMETERS_ERROR"
   * @const
   */
  CONNECTION_MISSING_PARAMETERS_ERROR: "CONNECTION_MISSING_PARAMETERS_ERROR",

  /**
   * value: "OBJECT_DOES_NOT_EXIST_ERROR"
   * @const
   */
  OBJECT_DOES_NOT_EXIST_ERROR: "OBJECT_DOES_NOT_EXIST_ERROR",

  /**
   * value: "SYNTAX_ERROR"
   * @const
   */
  SYNTAX_ERROR: "SYNTAX_ERROR",

  /**
   * value: "CONNECTION_DATABASE_TIMEOUT"
   * @const
   */
  CONNECTION_DATABASE_TIMEOUT: "CONNECTION_DATABASE_TIMEOUT",

  /**
   * value: "VIZ_GET_DF_ERROR"
   * @const
   */
  VIZ_GET_DF_ERROR: "VIZ_GET_DF_ERROR",

  /**
   * value: "UNKNOWN_DATASOURCE_TYPE_ERROR"
   * @const
   */
  UNKNOWN_DATASOURCE_TYPE_ERROR: "UNKNOWN_DATASOURCE_TYPE_ERROR",

  /**
   * value: "FAILED_FETCHING_DATASOURCE_INFO_ERROR"
   * @const
   */
  FAILED_FETCHING_DATASOURCE_INFO_ERROR: "FAILED_FETCHING_DATASOURCE_INFO_ERROR",

  /**
   * value: "TABLE_SECURITY_ACCESS_ERROR"
   * @const
   */
  TABLE_SECURITY_ACCESS_ERROR: "TABLE_SECURITY_ACCESS_ERROR",

  /**
   * value: "DATASOURCE_SECURITY_ACCESS_ERROR"
   * @const
   */
  DATASOURCE_SECURITY_ACCESS_ERROR: "DATASOURCE_SECURITY_ACCESS_ERROR",

  /**
   * value: "DATABASE_SECURITY_ACCESS_ERROR"
   * @const
   */
  DATABASE_SECURITY_ACCESS_ERROR: "DATABASE_SECURITY_ACCESS_ERROR",

  /**
   * value: "QUERY_SECURITY_ACCESS_ERROR"
   * @const
   */
  QUERY_SECURITY_ACCESS_ERROR: "QUERY_SECURITY_ACCESS_ERROR",

  /**
   * value: "MISSING_OWNERSHIP_ERROR"
   * @const
   */
  MISSING_OWNERSHIP_ERROR: "MISSING_OWNERSHIP_ERROR",

  /**
   * value: "USER_ACTIVITY_SECURITY_ACCESS_ERROR"
   * @const
   */
  USER_ACTIVITY_SECURITY_ACCESS_ERROR: "USER_ACTIVITY_SECURITY_ACCESS_ERROR",

  /**
   * value: "BACKEND_TIMEOUT_ERROR"
   * @const
   */
  BACKEND_TIMEOUT_ERROR: "BACKEND_TIMEOUT_ERROR",

  /**
   * value: "DATABASE_NOT_FOUND_ERROR"
   * @const
   */
  DATABASE_NOT_FOUND_ERROR: "DATABASE_NOT_FOUND_ERROR",

  /**
   * value: "MISSING_TEMPLATE_PARAMS_ERROR"
   * @const
   */
  MISSING_TEMPLATE_PARAMS_ERROR: "MISSING_TEMPLATE_PARAMS_ERROR",

  /**
   * value: "INVALID_TEMPLATE_PARAMS_ERROR"
   * @const
   */
  INVALID_TEMPLATE_PARAMS_ERROR: "INVALID_TEMPLATE_PARAMS_ERROR",

  /**
   * value: "RESULTS_BACKEND_NOT_CONFIGURED_ERROR"
   * @const
   */
  RESULTS_BACKEND_NOT_CONFIGURED_ERROR: "RESULTS_BACKEND_NOT_CONFIGURED_ERROR",

  /**
   * value: "DML_NOT_ALLOWED_ERROR"
   * @const
   */
  DML_NOT_ALLOWED_ERROR: "DML_NOT_ALLOWED_ERROR",

  /**
   * value: "INVALID_CTAS_QUERY_ERROR"
   * @const
   */
  INVALID_CTAS_QUERY_ERROR: "INVALID_CTAS_QUERY_ERROR",

  /**
   * value: "INVALID_CVAS_QUERY_ERROR"
   * @const
   */
  INVALID_CVAS_QUERY_ERROR: "INVALID_CVAS_QUERY_ERROR",

  /**
   * value: "SQLLAB_TIMEOUT_ERROR"
   * @const
   */
  SQLLAB_TIMEOUT_ERROR: "SQLLAB_TIMEOUT_ERROR",

  /**
   * value: "RESULTS_BACKEND_ERROR"
   * @const
   */
  RESULTS_BACKEND_ERROR: "RESULTS_BACKEND_ERROR",

  /**
   * value: "ASYNC_WORKERS_ERROR"
   * @const
   */
  ASYNC_WORKERS_ERROR: "ASYNC_WORKERS_ERROR",

  /**
   * value: "ADHOC_SUBQUERY_NOT_ALLOWED_ERROR"
   * @const
   */
  ADHOC_SUBQUERY_NOT_ALLOWED_ERROR: "ADHOC_SUBQUERY_NOT_ALLOWED_ERROR",

  /**
   * value: "GENERIC_COMMAND_ERROR"
   * @const
   */
  GENERIC_COMMAND_ERROR: "GENERIC_COMMAND_ERROR",

  /**
   * value: "GENERIC_BACKEND_ERROR"
   * @const
   */
  GENERIC_BACKEND_ERROR: "GENERIC_BACKEND_ERROR",

  /**
   * value: "INVALID_PAYLOAD_FORMAT_ERROR"
   * @const
   */
  INVALID_PAYLOAD_FORMAT_ERROR: "INVALID_PAYLOAD_FORMAT_ERROR",

  /**
   * value: "INVALID_PAYLOAD_SCHEMA_ERROR"
   * @const
   */
  INVALID_PAYLOAD_SCHEMA_ERROR: "INVALID_PAYLOAD_SCHEMA_ERROR",

  /**
   * value: "REPORT_NOTIFICATION_ERROR"
   * @const
   */
  REPORT_NOTIFICATION_ERROR: "REPORT_NOTIFICATION_ERROR"
};
/**
 * @member {module:model/InlineResponse410Errors.ErrorTypeEnum} errorType
 */
InlineResponse410Errors.prototype.errorType = undefined;

/**
 * @member {Object} extra
 */
InlineResponse410Errors.prototype.extra = undefined;

/**
 * Allowed values for the <code>level</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse410Errors.LevelEnum = {
  /**
   * value: "info"
   * @const
   */
  info: "info",

  /**
   * value: "warning"
   * @const
   */
  warning: "warning",

  /**
   * value: "error"
   * @const
   */
  error: "error"
};
/**
 * @member {module:model/InlineResponse410Errors.LevelEnum} level
 */
InlineResponse410Errors.prototype.level = undefined;

/**
 * @member {String} message
 */
InlineResponse410Errors.prototype.message = undefined;

