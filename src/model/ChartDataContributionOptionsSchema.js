/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The ChartDataContributionOptionsSchema model module.
 * @module model/ChartDataContributionOptionsSchema
 * @version v1
 */
export class ChartDataContributionOptionsSchema {
  /**
   * Constructs a new <code>ChartDataContributionOptionsSchema</code>.
   * @alias module:model/ChartDataContributionOptionsSchema
   * @class
   * @param orientation {module:model/ChartDataContributionOptionsSchema.OrientationEnum} Should cell values be calculated across the row or column.
   */
  constructor(orientation) {
    this.orientation = orientation;
  }

  /**
   * Constructs a <code>ChartDataContributionOptionsSchema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChartDataContributionOptionsSchema} obj Optional instance to populate.
   * @return {module:model/ChartDataContributionOptionsSchema} The populated <code>ChartDataContributionOptionsSchema</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ChartDataContributionOptionsSchema();
      if (data.hasOwnProperty('orientation'))
        obj.orientation = ApiClient.convertToType(data['orientation'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>orientation</code> property.
 * @enum {String}
 * @readonly
 */
ChartDataContributionOptionsSchema.OrientationEnum = {
  /**
   * value: "row"
   * @const
   */
  row: "row",

  /**
   * value: "column"
   * @const
   */
  column: "column"
};
/**
 * Should cell values be calculated across the row or column.
 * @member {module:model/ChartDataContributionOptionsSchema.OrientationEnum} orientation
 */
ChartDataContributionOptionsSchema.prototype.orientation = undefined;

