/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {InlineResponse20043} from '../model/InlineResponse20043';
import {InlineResponse400} from '../model/InlineResponse400';

/**
* Menu service.
* @module api/MenuApi
* @version v1
*/
export class MenuApi {

    /**
    * Constructs a new MenuApi. 
    * @alias module:api/MenuApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiV1MenuGet operation.
     * @callback moduleapi/MenuApi~apiV1MenuGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20043{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the menu data structure. Returns a forest like structure with the menu the user has access to
     * @param {module:api/MenuApi~apiV1MenuGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1MenuGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['jwt'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20043;

      return this.apiClient.callApi(
        '/api/v1/menu/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}