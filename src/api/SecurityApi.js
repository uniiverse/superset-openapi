/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {GuestTokenCreate} from '../model/GuestTokenCreate';
import {InlineResponse20045} from '../model/InlineResponse20045';
import {InlineResponse20059} from '../model/InlineResponse20059';
import {InlineResponse20060} from '../model/InlineResponse20060';
import {InlineResponse20061} from '../model/InlineResponse20061';
import {InlineResponse400} from '../model/InlineResponse400';
import {SecurityLoginBody} from '../model/SecurityLoginBody';

/**
* Security service.
* @module api/SecurityApi
* @version v1
*/
export class SecurityApi {

    /**
    * Constructs a new SecurityApi. 
    * @alias module:api/SecurityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiV1SecurityCsrfTokenGet operation.
     * @callback moduleapi/SecurityApi~apiV1SecurityCsrfTokenGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20045{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch the CSRF token
     * @param {module:api/SecurityApi~apiV1SecurityCsrfTokenGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1SecurityCsrfTokenGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['jwt'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20045;

      return this.apiClient.callApi(
        '/api/v1/security/csrf_token/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV1SecurityGuestTokenPost operation.
     * @callback moduleapi/SecurityApi~apiV1SecurityGuestTokenPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20059{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetches a guest token
     * @param {module:model/GuestTokenCreate} body Parameters for the guest token
     * @param {module:api/SecurityApi~apiV1SecurityGuestTokenPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1SecurityGuestTokenPost(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiV1SecurityGuestTokenPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['jwt'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20059;

      return this.apiClient.callApi(
        '/api/v1/security/guest_token/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV1SecurityLoginPost operation.
     * @callback moduleapi/SecurityApi~apiV1SecurityLoginPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20060{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Authenticate and get a JWT access and refresh token
     * @param {module:model/SecurityLoginBody} body 
     * @param {module:api/SecurityApi~apiV1SecurityLoginPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1SecurityLoginPost(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiV1SecurityLoginPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse20060;

      return this.apiClient.callApi(
        '/api/v1/security/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV1SecurityRefreshPost operation.
     * @callback moduleapi/SecurityApi~apiV1SecurityRefreshPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20061{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Use the refresh token to get a new JWT access token
     * @param {module:api/SecurityApi~apiV1SecurityRefreshPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1SecurityRefreshPost(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['jwt_refresh'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20061;

      return this.apiClient.callApi(
        '/api/v1/security/refresh', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}