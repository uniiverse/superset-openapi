/**
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { InlineResponse400 } from '../models';
/**
 * ImportexportApi - axios parameter creator
 * @export
 */
export declare const ImportexportApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns a ZIP file with all the Superset assets (databases, datasets, charts, dashboards, saved queries) as YAML files.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AssetsExportGet: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {Blob} bundle
     * @param {string} passwords
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AssetsImportPostForm: (bundle: Blob, passwords: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ImportexportApi - functional programming interface
 * @export
 */
export declare const ImportexportApiFp: (configuration?: Configuration) => {
    /**
     * Returns a ZIP file with all the Superset assets (databases, datasets, charts, dashboards, saved queries) as YAML files.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AssetsExportGet(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Blob>>>;
    /**
     *
     * @param {Blob} bundle
     * @param {string} passwords
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AssetsImportPostForm(bundle: Blob, passwords: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse400>>>;
};
/**
 * ImportexportApi - factory interface
 * @export
 */
export declare const ImportexportApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns a ZIP file with all the Superset assets (databases, datasets, charts, dashboards, saved queries) as YAML files.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AssetsExportGet(options?: AxiosRequestConfig): Promise<AxiosResponse<Blob>>;
    /**
     *
     * @param {Blob} bundle
     * @param {string} passwords
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AssetsImportPostForm(bundle: Blob, passwords: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
};
/**
 * ImportexportApi - object-oriented interface
 * @export
 * @class ImportexportApi
 * @extends {BaseAPI}
 */
export declare class ImportexportApi extends BaseAPI {
    /**
     * Returns a ZIP file with all the Superset assets (databases, datasets, charts, dashboards, saved queries) as YAML files.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImportexportApi
     */
    apiV1AssetsExportGet(options?: AxiosRequestConfig): Promise<AxiosResponse<Blob>>;
    /**
     *
     * @param {Blob} bundle
     * @param {string} passwords
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImportexportApi
     */
    apiV1AssetsImportPostForm(bundle: Blob, passwords: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
}
