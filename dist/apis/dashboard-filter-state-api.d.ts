/**
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { InlineResponse20025 } from '../models';
import { InlineResponse20026 } from '../models';
import { InlineResponse2016 } from '../models';
import { TemporaryCachePostSchema } from '../models';
import { TemporaryCachePutSchema } from '../models';
/**
 * DashboardFilterStateApi - axios parameter creator
 * @export
 */
export declare const DashboardFilterStateApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Deletes a value.
     * @param {number} pk
     * @param {string} key The value key.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStateKeyDelete: (pk: number, key: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrives a value.
     * @param {number} pk
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStateKeyGet: (pk: number, key: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Updates an existing value.
     * @param {TemporaryCachePutSchema} body
     * @param {number} pk
     * @param {string} key
     * @param {number} [tabId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStateKeyPut: (body: TemporaryCachePutSchema, pk: number, key: string, tabId?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Stores a new value.
     * @param {TemporaryCachePostSchema} body
     * @param {number} pk
     * @param {number} [tabId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStatePost: (body: TemporaryCachePostSchema, pk: number, tabId?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DashboardFilterStateApi - functional programming interface
 * @export
 */
export declare const DashboardFilterStateApiFp: (configuration?: Configuration) => {
    /**
     * Deletes a value.
     * @param {number} pk
     * @param {string} key The value key.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStateKeyDelete(pk: number, key: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20026>>>;
    /**
     * Retrives a value.
     * @param {number} pk
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStateKeyGet(pk: number, key: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20025>>>;
    /**
     * Updates an existing value.
     * @param {TemporaryCachePutSchema} body
     * @param {number} pk
     * @param {string} key
     * @param {number} [tabId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStateKeyPut(body: TemporaryCachePutSchema, pk: number, key: string, tabId?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2016>>>;
    /**
     * Stores a new value.
     * @param {TemporaryCachePostSchema} body
     * @param {number} pk
     * @param {number} [tabId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStatePost(body: TemporaryCachePostSchema, pk: number, tabId?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2016>>>;
};
/**
 * DashboardFilterStateApi - factory interface
 * @export
 */
export declare const DashboardFilterStateApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Deletes a value.
     * @param {number} pk
     * @param {string} key The value key.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStateKeyDelete(pk: number, key: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20026>>;
    /**
     * Retrives a value.
     * @param {number} pk
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStateKeyGet(pk: number, key: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20025>>;
    /**
     * Updates an existing value.
     * @param {TemporaryCachePutSchema} body
     * @param {number} pk
     * @param {string} key
     * @param {number} [tabId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStateKeyPut(body: TemporaryCachePutSchema, pk: number, key: string, tabId?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2016>>;
    /**
     * Stores a new value.
     * @param {TemporaryCachePostSchema} body
     * @param {number} pk
     * @param {number} [tabId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardPkFilterStatePost(body: TemporaryCachePostSchema, pk: number, tabId?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2016>>;
};
/**
 * DashboardFilterStateApi - object-oriented interface
 * @export
 * @class DashboardFilterStateApi
 * @extends {BaseAPI}
 */
export declare class DashboardFilterStateApi extends BaseAPI {
    /**
     * Deletes a value.
     * @param {number} pk
     * @param {string} key The value key.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardFilterStateApi
     */
    apiV1DashboardPkFilterStateKeyDelete(pk: number, key: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20026>>;
    /**
     * Retrives a value.
     * @param {number} pk
     * @param {string} key
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardFilterStateApi
     */
    apiV1DashboardPkFilterStateKeyGet(pk: number, key: string, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20025>>;
    /**
     * Updates an existing value.
     * @param {TemporaryCachePutSchema} body
     * @param {number} pk
     * @param {string} key
     * @param {number} [tabId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardFilterStateApi
     */
    apiV1DashboardPkFilterStateKeyPut(body: TemporaryCachePutSchema, pk: number, key: string, tabId?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2016>>;
    /**
     * Stores a new value.
     * @param {TemporaryCachePostSchema} body
     * @param {number} pk
     * @param {number} [tabId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardFilterStateApi
     */
    apiV1DashboardPkFilterStatePost(body: TemporaryCachePostSchema, pk: number, tabId?: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2016>>;
}
