/**
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { FilterSetRestApiPost } from '../models';
import { FilterSetRestApiPut } from '../models';
import { InlineResponse20018 } from '../models';
import { InlineResponse20019 } from '../models';
import { InlineResponse2015 } from '../models';
import { InlineResponse400 } from '../models';
/**
 * FilterSetRestApiApi - axios parameter creator
 * @export
 */
export declare const FilterSetRestApiApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get a dashboard's list of filter sets
     * @param {number} dashboardId The id of the dashboard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsGet: (dashboardId: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Deletes a Dashboard.
     * @param {number} dashboardId
     * @param {number} pk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsPkDelete: (dashboardId: number, pk: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Changes a Dashboard's Filter set.
     * @param {FilterSetRestApiPut} body Filter set schema
     * @param {number} dashboardId
     * @param {number} pk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsPkPut: (body: FilterSetRestApiPut, dashboardId: number, pk: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new Dashboard's Filter Set.
     * @param {FilterSetRestApiPost} body Filter set schema
     * @param {number} dashboardId The id of the dashboard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsPost: (body: FilterSetRestApiPost, dashboardId: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FilterSetRestApiApi - functional programming interface
 * @export
 */
export declare const FilterSetRestApiApiFp: (configuration?: Configuration) => {
    /**
     * Get a dashboard's list of filter sets
     * @param {number} dashboardId The id of the dashboard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsGet(dashboardId: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<InlineResponse20018>>>>;
    /**
     * Deletes a Dashboard.
     * @param {number} dashboardId
     * @param {number} pk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsPkDelete(dashboardId: number, pk: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse400>>>;
    /**
     * Changes a Dashboard's Filter set.
     * @param {FilterSetRestApiPut} body Filter set schema
     * @param {number} dashboardId
     * @param {number} pk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsPkPut(body: FilterSetRestApiPut, dashboardId: number, pk: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20019>>>;
    /**
     * Create a new Dashboard's Filter Set.
     * @param {FilterSetRestApiPost} body Filter set schema
     * @param {number} dashboardId The id of the dashboard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsPost(body: FilterSetRestApiPost, dashboardId: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2015>>>;
};
/**
 * FilterSetRestApiApi - factory interface
 * @export
 */
export declare const FilterSetRestApiApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get a dashboard's list of filter sets
     * @param {number} dashboardId The id of the dashboard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsGet(dashboardId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<InlineResponse20018>>>;
    /**
     * Deletes a Dashboard.
     * @param {number} dashboardId
     * @param {number} pk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsPkDelete(dashboardId: number, pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Changes a Dashboard's Filter set.
     * @param {FilterSetRestApiPut} body Filter set schema
     * @param {number} dashboardId
     * @param {number} pk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsPkPut(body: FilterSetRestApiPut, dashboardId: number, pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20019>>;
    /**
     * Create a new Dashboard's Filter Set.
     * @param {FilterSetRestApiPost} body Filter set schema
     * @param {number} dashboardId The id of the dashboard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DashboardDashboardIdFiltersetsPost(body: FilterSetRestApiPost, dashboardId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2015>>;
};
/**
 * FilterSetRestApiApi - object-oriented interface
 * @export
 * @class FilterSetRestApiApi
 * @extends {BaseAPI}
 */
export declare class FilterSetRestApiApi extends BaseAPI {
    /**
     * Get a dashboard's list of filter sets
     * @param {number} dashboardId The id of the dashboard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilterSetRestApiApi
     */
    apiV1DashboardDashboardIdFiltersetsGet(dashboardId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<InlineResponse20018>>>;
    /**
     * Deletes a Dashboard.
     * @param {number} dashboardId
     * @param {number} pk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilterSetRestApiApi
     */
    apiV1DashboardDashboardIdFiltersetsPkDelete(dashboardId: number, pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Changes a Dashboard's Filter set.
     * @param {FilterSetRestApiPut} body Filter set schema
     * @param {number} dashboardId
     * @param {number} pk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilterSetRestApiApi
     */
    apiV1DashboardDashboardIdFiltersetsPkPut(body: FilterSetRestApiPut, dashboardId: number, pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20019>>;
    /**
     * Create a new Dashboard's Filter Set.
     * @param {FilterSetRestApiPost} body Filter set schema
     * @param {number} dashboardId The id of the dashboard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilterSetRestApiApi
     */
    apiV1DashboardDashboardIdFiltersetsPost(body: FilterSetRestApiPost, dashboardId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2015>>;
}
