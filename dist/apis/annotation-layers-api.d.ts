/**
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { AnnotationLayerRestApiPost } from '../models';
import { AnnotationLayerRestApiPut } from '../models';
import { AnnotationRestApiPost } from '../models';
import { AnnotationRestApiPut } from '../models';
import { GetDeleteIdsSchema } from '../models';
import { GetInfoSchema } from '../models';
import { GetItemSchema } from '../models';
import { GetListSchema } from '../models';
import { GetRelatedSchema } from '../models';
import { InlineResponse2001 } from '../models';
import { InlineResponse2002 } from '../models';
import { InlineResponse2003 } from '../models';
import { InlineResponse2004 } from '../models';
import { InlineResponse2005 } from '../models';
import { InlineResponse2006 } from '../models';
import { InlineResponse2007 } from '../models';
import { InlineResponse201 } from '../models';
import { InlineResponse2011 } from '../models';
import { InlineResponse400 } from '../models';
import { RelatedResponseSchema } from '../models';
/**
 * AnnotationLayersApi - axios parameter creator
 * @export
 */
export declare const AnnotationLayersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Deletes multiple annotation layers in a bulk operation.
     * @param {GetDeleteIdsSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerDelete: (q?: GetDeleteIdsSchema, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     * @param {GetListSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerGet: (q?: GetListSchema, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get metadata information about this API resource
     * @param {GetInfoSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerInfoGet: (q?: GetInfoSchema, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdDelete: (pk: number, annotationId: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get an Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk
     * @param {GetItemSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdGet: (pk: number, annotationId: number, q?: GetItemSchema, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update an Annotation layer
     * @param {AnnotationRestApiPut} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdPut: (body: AnnotationRestApiPut, pk: number, annotationId: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Deletes multiple annotation in a bulk operation.
     * @param {number} pk The annotation layer pk for this annotation
     * @param {GetDeleteIdsSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationDelete: (pk: number, q?: GetDeleteIdsSchema, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     * @param {number} pk The annotation layer id for this annotation
     * @param {GetListSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationGet: (pk: number, q?: GetListSchema, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create an Annotation layer
     * @param {AnnotationRestApiPost} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationPost: (body: AnnotationRestApiPost, pk: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkDelete: (pk: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get an Annotation layer
     * @param {number} pk
     * @param {GetItemSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkGet: (pk: number, q?: GetItemSchema, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update an Annotation layer
     * @param {AnnotationLayerRestApiPut} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkPut: (body: AnnotationLayerRestApiPut, pk: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create an Annotation layer
     * @param {AnnotationLayerRestApiPost} body Annotation Layer schema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPost: (body: AnnotationLayerRestApiPost, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} columnName
     * @param {GetRelatedSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerRelatedColumnNameGet: (columnName: string, q?: GetRelatedSchema, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AnnotationLayersApi - functional programming interface
 * @export
 */
export declare const AnnotationLayersApiFp: (configuration?: Configuration) => {
    /**
     * Deletes multiple annotation layers in a bulk operation.
     * @param {GetDeleteIdsSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerDelete(q?: GetDeleteIdsSchema, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse400>>>;
    /**
     * Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     * @param {GetListSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerGet(q?: GetListSchema, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2001>>>;
    /**
     * Get metadata information about this API resource
     * @param {GetInfoSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerInfoGet(q?: GetInfoSchema, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2002>>>;
    /**
     * Delete Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdDelete(pk: number, annotationId: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse400>>>;
    /**
     * Get an Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk
     * @param {GetItemSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdGet(pk: number, annotationId: number, q?: GetItemSchema, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2006>>>;
    /**
     * Update an Annotation layer
     * @param {AnnotationRestApiPut} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdPut(body: AnnotationRestApiPut, pk: number, annotationId: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2007>>>;
    /**
     * Deletes multiple annotation in a bulk operation.
     * @param {number} pk The annotation layer pk for this annotation
     * @param {GetDeleteIdsSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationDelete(pk: number, q?: GetDeleteIdsSchema, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse400>>>;
    /**
     * Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     * @param {number} pk The annotation layer id for this annotation
     * @param {GetListSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationGet(pk: number, q?: GetListSchema, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2005>>>;
    /**
     * Create an Annotation layer
     * @param {AnnotationRestApiPost} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationPost(body: AnnotationRestApiPost, pk: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2011>>>;
    /**
     * Delete Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkDelete(pk: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse400>>>;
    /**
     * Get an Annotation layer
     * @param {number} pk
     * @param {GetItemSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkGet(pk: number, q?: GetItemSchema, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2003>>>;
    /**
     * Update an Annotation layer
     * @param {AnnotationLayerRestApiPut} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkPut(body: AnnotationLayerRestApiPut, pk: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse2004>>>;
    /**
     * Create an Annotation layer
     * @param {AnnotationLayerRestApiPost} body Annotation Layer schema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPost(body: AnnotationLayerRestApiPost, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse201>>>;
    /**
     *
     * @param {string} columnName
     * @param {GetRelatedSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerRelatedColumnNameGet(columnName: string, q?: GetRelatedSchema, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<RelatedResponseSchema>>>;
};
/**
 * AnnotationLayersApi - factory interface
 * @export
 */
export declare const AnnotationLayersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Deletes multiple annotation layers in a bulk operation.
     * @param {GetDeleteIdsSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerDelete(q?: GetDeleteIdsSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     * @param {GetListSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerGet(q?: GetListSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2001>>;
    /**
     * Get metadata information about this API resource
     * @param {GetInfoSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerInfoGet(q?: GetInfoSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2002>>;
    /**
     * Delete Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdDelete(pk: number, annotationId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Get an Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk
     * @param {GetItemSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdGet(pk: number, annotationId: number, q?: GetItemSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2006>>;
    /**
     * Update an Annotation layer
     * @param {AnnotationRestApiPut} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdPut(body: AnnotationRestApiPut, pk: number, annotationId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2007>>;
    /**
     * Deletes multiple annotation in a bulk operation.
     * @param {number} pk The annotation layer pk for this annotation
     * @param {GetDeleteIdsSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationDelete(pk: number, q?: GetDeleteIdsSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     * @param {number} pk The annotation layer id for this annotation
     * @param {GetListSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationGet(pk: number, q?: GetListSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2005>>;
    /**
     * Create an Annotation layer
     * @param {AnnotationRestApiPost} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkAnnotationPost(body: AnnotationRestApiPost, pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2011>>;
    /**
     * Delete Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkDelete(pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Get an Annotation layer
     * @param {number} pk
     * @param {GetItemSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkGet(pk: number, q?: GetItemSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2003>>;
    /**
     * Update an Annotation layer
     * @param {AnnotationLayerRestApiPut} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPkPut(body: AnnotationLayerRestApiPut, pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2004>>;
    /**
     * Create an Annotation layer
     * @param {AnnotationLayerRestApiPost} body Annotation Layer schema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerPost(body: AnnotationLayerRestApiPost, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse201>>;
    /**
     *
     * @param {string} columnName
     * @param {GetRelatedSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1AnnotationLayerRelatedColumnNameGet(columnName: string, q?: GetRelatedSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<RelatedResponseSchema>>;
};
/**
 * AnnotationLayersApi - object-oriented interface
 * @export
 * @class AnnotationLayersApi
 * @extends {BaseAPI}
 */
export declare class AnnotationLayersApi extends BaseAPI {
    /**
     * Deletes multiple annotation layers in a bulk operation.
     * @param {GetDeleteIdsSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerDelete(q?: GetDeleteIdsSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     * @param {GetListSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerGet(q?: GetListSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2001>>;
    /**
     * Get metadata information about this API resource
     * @param {GetInfoSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerInfoGet(q?: GetInfoSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2002>>;
    /**
     * Delete Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdDelete(pk: number, annotationId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Get an Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk
     * @param {GetItemSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdGet(pk: number, annotationId: number, q?: GetItemSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2006>>;
    /**
     * Update an Annotation layer
     * @param {AnnotationRestApiPut} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {number} annotationId The annotation pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPkAnnotationAnnotationIdPut(body: AnnotationRestApiPut, pk: number, annotationId: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2007>>;
    /**
     * Deletes multiple annotation in a bulk operation.
     * @param {number} pk The annotation layer pk for this annotation
     * @param {GetDeleteIdsSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPkAnnotationDelete(pk: number, q?: GetDeleteIdsSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Get a list of Annotation layers, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     * @param {number} pk The annotation layer id for this annotation
     * @param {GetListSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPkAnnotationGet(pk: number, q?: GetListSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2005>>;
    /**
     * Create an Annotation layer
     * @param {AnnotationRestApiPost} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPkAnnotationPost(body: AnnotationRestApiPost, pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2011>>;
    /**
     * Delete Annotation layer
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPkDelete(pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse400>>;
    /**
     * Get an Annotation layer
     * @param {number} pk
     * @param {GetItemSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPkGet(pk: number, q?: GetItemSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2003>>;
    /**
     * Update an Annotation layer
     * @param {AnnotationLayerRestApiPut} body Annotation schema
     * @param {number} pk The annotation layer pk for this annotation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPkPut(body: AnnotationLayerRestApiPut, pk: number, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse2004>>;
    /**
     * Create an Annotation layer
     * @param {AnnotationLayerRestApiPost} body Annotation Layer schema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerPost(body: AnnotationLayerRestApiPost, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse201>>;
    /**
     *
     * @param {string} columnName
     * @param {GetRelatedSchema} [q]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnnotationLayersApi
     */
    apiV1AnnotationLayerRelatedColumnNameGet(columnName: string, q?: GetRelatedSchema, options?: AxiosRequestConfig): Promise<AxiosResponse<RelatedResponseSchema>>;
}
