/**
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { InlineResponse20040 } from '../models';
/**
 * CurrentUserApi - axios parameter creator
 * @export
 */
export declare const CurrentUserApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns the user object corresponding to the agent making the request, or returns a 401 error if the user is unauthenticated.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1MeGet: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns the user roles corresponding to the agent making the request, or returns a 401 error if the user is unauthenticated.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1MeRolesGet: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CurrentUserApi - functional programming interface
 * @export
 */
export declare const CurrentUserApiFp: (configuration?: Configuration) => {
    /**
     * Returns the user object corresponding to the agent making the request, or returns a 401 error if the user is unauthenticated.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1MeGet(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20040>>>;
    /**
     * Returns the user roles corresponding to the agent making the request, or returns a 401 error if the user is unauthenticated.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1MeRolesGet(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20040>>>;
};
/**
 * CurrentUserApi - factory interface
 * @export
 */
export declare const CurrentUserApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns the user object corresponding to the agent making the request, or returns a 401 error if the user is unauthenticated.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1MeGet(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20040>>;
    /**
     * Returns the user roles corresponding to the agent making the request, or returns a 401 error if the user is unauthenticated.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1MeRolesGet(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20040>>;
};
/**
 * CurrentUserApi - object-oriented interface
 * @export
 * @class CurrentUserApi
 * @extends {BaseAPI}
 */
export declare class CurrentUserApi extends BaseAPI {
    /**
     * Returns the user object corresponding to the agent making the request, or returns a 401 error if the user is unauthenticated.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CurrentUserApi
     */
    apiV1MeGet(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20040>>;
    /**
     * Returns the user roles corresponding to the agent making the request, or returns a 401 error if the user is unauthenticated.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CurrentUserApi
     */
    apiV1MeRolesGet(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20040>>;
}
