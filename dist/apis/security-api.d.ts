/**
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { GuestTokenCreate } from '../models';
import { InlineResponse20043 } from '../models';
import { InlineResponse20054 } from '../models';
import { InlineResponse20055 } from '../models';
import { InlineResponse20056 } from '../models';
import { SecurityLoginBody } from '../models';
/**
 * SecurityApi - axios parameter creator
 * @export
 */
export declare const SecurityApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Fetch the CSRF token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityCsrfTokenGet: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetches a guest token
     * @param {GuestTokenCreate} body Parameters for the guest token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityGuestTokenPost: (body: GuestTokenCreate, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Authenticate and get a JWT access and refresh token
     * @param {SecurityLoginBody} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityLoginPost: (body: SecurityLoginBody, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Use the refresh token to get a new JWT access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityRefreshPost: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SecurityApi - functional programming interface
 * @export
 */
export declare const SecurityApiFp: (configuration?: Configuration) => {
    /**
     * Fetch the CSRF token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityCsrfTokenGet(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20043>>>;
    /**
     * Fetches a guest token
     * @param {GuestTokenCreate} body Parameters for the guest token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityGuestTokenPost(body: GuestTokenCreate, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20054>>>;
    /**
     * Authenticate and get a JWT access and refresh token
     * @param {SecurityLoginBody} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityLoginPost(body: SecurityLoginBody, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20055>>>;
    /**
     * Use the refresh token to get a new JWT access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityRefreshPost(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<InlineResponse20056>>>;
};
/**
 * SecurityApi - factory interface
 * @export
 */
export declare const SecurityApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Fetch the CSRF token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityCsrfTokenGet(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20043>>;
    /**
     * Fetches a guest token
     * @param {GuestTokenCreate} body Parameters for the guest token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityGuestTokenPost(body: GuestTokenCreate, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20054>>;
    /**
     * Authenticate and get a JWT access and refresh token
     * @param {SecurityLoginBody} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityLoginPost(body: SecurityLoginBody, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20055>>;
    /**
     * Use the refresh token to get a new JWT access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SecurityRefreshPost(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20056>>;
};
/**
 * SecurityApi - object-oriented interface
 * @export
 * @class SecurityApi
 * @extends {BaseAPI}
 */
export declare class SecurityApi extends BaseAPI {
    /**
     * Fetch the CSRF token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityApi
     */
    apiV1SecurityCsrfTokenGet(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20043>>;
    /**
     * Fetches a guest token
     * @param {GuestTokenCreate} body Parameters for the guest token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityApi
     */
    apiV1SecurityGuestTokenPost(body: GuestTokenCreate, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20054>>;
    /**
     * Authenticate and get a JWT access and refresh token
     * @param {SecurityLoginBody} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityApi
     */
    apiV1SecurityLoginPost(body: SecurityLoginBody, options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20055>>;
    /**
     * Use the refresh token to get a new JWT access token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityApi
     */
    apiV1SecurityRefreshPost(options?: AxiosRequestConfig): Promise<AxiosResponse<InlineResponse20056>>;
}
